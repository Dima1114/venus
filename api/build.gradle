buildscript {
	ext {
		springBootVersion = '2.1.1.RELEASE'
		kotlinVersion = '1.3.20'
		connectorVersion = '8.0.13'
	}
	repositories {
		mavenCentral()
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
		classpath("mysql:mysql-connector-java:${connectorVersion}")
		classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
	}
}

plugins {
	id 'org.liquibase.gradle' version '2.0.1'
    id 'org.jetbrains.kotlin.jvm' version '1.3.11'
}

ext {
    testParallel = 1
}

apply plugin: 'java'
apply plugin: 'kotlin-kapt'
apply plugin: "kotlin-spring"
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'api'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
	mavenLocal()
	jcenter()
}

//sourceSets {
//	main.kotlin.srcDirs += 'src/main/java'
//}

dependencies {
	implementation('org.springframework.boot:spring-boot-starter-data-jpa')
	implementation('org.springframework.boot:spring-boot-starter-data-rest')
	implementation('org.springframework.boot:spring-boot-starter-security')
	implementation('org.springframework.boot:spring-boot-starter-web')
	implementation("io.github.microutils:kotlin-logging:1.6.10")
	
	//jsm
	implementation("org.springframework.boot:spring-boot-starter-activemq")
	compile("org.apache.activemq:activemq-broker")

    //email
    implementation('org.springframework.boot:spring-boot-starter-mail')

	//quartz
	compile 'org.quartz-scheduler:quartz:2.3.0'
	compile 'org.quartz-scheduler:quartz-jobs:2.3.0'
	
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
	compile "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
	compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

	compile group: 'org.eclipse.jetty', name: 'jetty-client', version: '9.4.14.v20181114'

	kapt 'com.querydsl:querydsl-apt:4.2.1:jpa'
	implementation 'com.querydsl:querydsl-jpa:4.2.1'

	compile('org.liquibase:liquibase-core')
	compile 'org.liquibase.ext:liquibase-hibernate5:3.6'
	compile 'io.jsonwebtoken:jjwt:0.6.0'
	compile 'log4j:log4j:1.2.17'
	compile 'org.reflections:reflections:0.9.11'
//	compile("com.fasterxml.jackson.core:jackson-databind")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")

	//liquibase
	liquibaseRuntime 'org.liquibase:liquibase-core'
	liquibaseRuntime 'org.liquibase.ext:liquibase-hibernate5:3.6'
	liquibaseRuntime 'mysql:mysql-connector-java'
	liquibaseRuntime 'org.springframework.data:spring-data-jpa'
	liquibaseRuntime 'org.springframework.boot:spring-boot-starter-security'
	liquibaseRuntime 'org.springframework:spring-aspects'
	liquibaseRuntime 'org.yaml:snakeyaml:1.23'
	liquibaseRuntime sourceSets.main.output
	
	runtimeOnly('mysql:mysql-connector-java')
	
	testImplementation('org.springframework.boot:spring-boot-starter-test')
	testImplementation('org.springframework.security:spring-security-test')
	testImplementation("com.h2database:h2")
	testImplementation("org.amshove.kluent:kluent:1.37")
	testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
	testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion"
	testCompile 'org.junit.jupiter:junit-jupiter-engine:5.3.2'
	kaptTest "com.querydsl:querydsl-apt:4.2.1:jpa"
}

diff.dependsOn build
diffChangeLog.dependsOn build

liquibase {
	activities {
		diffMain {
			defaultsFile 'src/main/resources/liquibase.properties'
			changeLogFile 'src/main/resources/' + new Date().format('yyyyMMdd-HHmm') + '.yml'
		}
        main {
            defaultsFile 'src/main/resources/liquibase.properties'
            changeLogFile 'src/main/resources/db/changelog/liquibase-changelog.yml'
        }
        if (project.hasProperty("runList")) {
            println(project.runList)
            runList = project.runList
        }
	}
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
//
//idea {
//	module {
//		def kaptMain = file('build/generated/source/kapt/main')
//		sourceDirs += kaptMain
//		generatedSourceDirs += kaptMain
//	}
//}
